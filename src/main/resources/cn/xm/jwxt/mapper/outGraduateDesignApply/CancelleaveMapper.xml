<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.xm.jwxt.mapper.outGraduateDesignApply.CancelleaveMapper" >
  <resultMap id="BaseResultMap" type="cn.xm.jwxt.bean.outGraduateDesignApply.Cancelleave" >
    <id column="cancelLeaveID" property="cancelleaveid" jdbcType="VARCHAR" />
    <result column="leaveID" property="leaveid" jdbcType="VARCHAR" />
    <result column="cancelTime" property="canceltime" jdbcType="TIMESTAMP" />
    <result column="passStartTime" property="passstarttime" jdbcType="TIMESTAMP" />
    <result column="passEndTime" property="passendtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    cancelLeaveID, leaveID, cancelTime, passStartTime, passEndTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.xm.jwxt.bean.outGraduateDesignApply.CancelleaveExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cancelleave
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from cancelleave
    where cancelLeaveID = #{cancelleaveid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from cancelleave
    where cancelLeaveID = #{cancelleaveid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="cn.xm.jwxt.bean.outGraduateDesignApply.CancelleaveExample" >
    delete from cancelleave
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.xm.jwxt.bean.outGraduateDesignApply.Cancelleave" >
    insert into cancelleave (cancelLeaveID, leaveID, cancelTime, 
      passStartTime, passEndTime)
    values (#{cancelleaveid,jdbcType=VARCHAR}, #{leaveid,jdbcType=VARCHAR}, #{canceltime,jdbcType=TIMESTAMP}, 
      #{passstarttime,jdbcType=TIMESTAMP}, #{passendtime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.xm.jwxt.bean.outGraduateDesignApply.Cancelleave" >
    insert into cancelleave
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cancelleaveid != null" >
        cancelLeaveID,
      </if>
      <if test="leaveid != null" >
        leaveID,
      </if>
      <if test="canceltime != null" >
        cancelTime,
      </if>
      <if test="passstarttime != null" >
        passStartTime,
      </if>
      <if test="passendtime != null" >
        passEndTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cancelleaveid != null" >
        #{cancelleaveid,jdbcType=VARCHAR},
      </if>
      <if test="leaveid != null" >
        #{leaveid,jdbcType=VARCHAR},
      </if>
      <if test="canceltime != null" >
        #{canceltime,jdbcType=TIMESTAMP},
      </if>
      <if test="passstarttime != null" >
        #{passstarttime,jdbcType=TIMESTAMP},
      </if>
      <if test="passendtime != null" >
        #{passendtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.xm.jwxt.bean.outGraduateDesignApply.CancelleaveExample" resultType="java.lang.Integer" >
    select count(*) from cancelleave
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update cancelleave
    <set >
      <if test="record.cancelleaveid != null" >
        cancelLeaveID = #{record.cancelleaveid,jdbcType=VARCHAR},
      </if>
      <if test="record.leaveid != null" >
        leaveID = #{record.leaveid,jdbcType=VARCHAR},
      </if>
      <if test="record.canceltime != null" >
        cancelTime = #{record.canceltime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.passstarttime != null" >
        passStartTime = #{record.passstarttime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.passendtime != null" >
        passEndTime = #{record.passendtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update cancelleave
    set cancelLeaveID = #{record.cancelleaveid,jdbcType=VARCHAR},
      leaveID = #{record.leaveid,jdbcType=VARCHAR},
      cancelTime = #{record.canceltime,jdbcType=TIMESTAMP},
      passStartTime = #{record.passstarttime,jdbcType=TIMESTAMP},
      passEndTime = #{record.passendtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.xm.jwxt.bean.outGraduateDesignApply.Cancelleave" >
    update cancelleave
    <set >
      <if test="leaveid != null" >
        leaveID = #{leaveid,jdbcType=VARCHAR},
      </if>
      <if test="canceltime != null" >
        cancelTime = #{canceltime,jdbcType=TIMESTAMP},
      </if>
      <if test="passstarttime != null" >
        passStartTime = #{passstarttime,jdbcType=TIMESTAMP},
      </if>
      <if test="passendtime != null" >
        passEndTime = #{passendtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where cancelLeaveID = #{cancelleaveid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.xm.jwxt.bean.outGraduateDesignApply.Cancelleave" >
    update cancelleave
    set leaveID = #{leaveid,jdbcType=VARCHAR},
      cancelTime = #{canceltime,jdbcType=TIMESTAMP},
      passStartTime = #{passstarttime,jdbcType=TIMESTAMP},
      passEndTime = #{passendtime,jdbcType=TIMESTAMP}
    where cancelLeaveID = #{cancelleaveid,jdbcType=VARCHAR}
  </update>
</mapper>
<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.xm.jwxt.mapper.trainScheme.CoursetypeinfoMapper" >
  <resultMap id="BaseResultMap" type="cn.xm.jwxt.bean.trainScheme.Coursetypeinfo" >
    <id column="courseTypeId" property="coursetypeid" jdbcType="INTEGER" />
    <result column="typeNum" property="typenum" jdbcType="VARCHAR" />
    <result column="upTypeNum" property="uptypenum" jdbcType="VARCHAR" />
    <result column="typeName" property="typename" jdbcType="VARCHAR" />
    <result column="trainingSchemeID" property="trainingschemeid" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    courseTypeId, typeNum, upTypeNum, typeName, trainingSchemeID, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.xm.jwxt.bean.trainScheme.CoursetypeinfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from coursetypeinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from coursetypeinfo
    where courseTypeId = #{coursetypeid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from coursetypeinfo
    where courseTypeId = #{coursetypeid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.xm.jwxt.bean.trainScheme.CoursetypeinfoExample" >
    delete from coursetypeinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.xm.jwxt.bean.trainScheme.Coursetypeinfo" >
    insert into coursetypeinfo (courseTypeId, typeNum, upTypeNum, 
      typeName, trainingSchemeID, remark
      )
    values (#{coursetypeid,jdbcType=INTEGER}, #{typenum,jdbcType=VARCHAR}, #{uptypenum,jdbcType=VARCHAR}, 
      #{typename,jdbcType=VARCHAR}, #{trainingschemeid,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.xm.jwxt.bean.trainScheme.Coursetypeinfo" >
    insert into coursetypeinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="coursetypeid != null" >
        courseTypeId,
      </if>
      <if test="typenum != null" >
        typeNum,
      </if>
      <if test="uptypenum != null" >
        upTypeNum,
      </if>
      <if test="typename != null" >
        typeName,
      </if>
      <if test="trainingschemeid != null" >
        trainingSchemeID,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="coursetypeid != null" >
        #{coursetypeid,jdbcType=INTEGER},
      </if>
      <if test="typenum != null" >
        #{typenum,jdbcType=VARCHAR},
      </if>
      <if test="uptypenum != null" >
        #{uptypenum,jdbcType=VARCHAR},
      </if>
      <if test="typename != null" >
        #{typename,jdbcType=VARCHAR},
      </if>
      <if test="trainingschemeid != null" >
        #{trainingschemeid,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.xm.jwxt.bean.trainScheme.CoursetypeinfoExample" resultType="java.lang.Integer" >
    select count(*) from coursetypeinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update coursetypeinfo
    <set >
      <if test="record.coursetypeid != null" >
        courseTypeId = #{record.coursetypeid,jdbcType=INTEGER},
      </if>
      <if test="record.typenum != null" >
        typeNum = #{record.typenum,jdbcType=VARCHAR},
      </if>
      <if test="record.uptypenum != null" >
        upTypeNum = #{record.uptypenum,jdbcType=VARCHAR},
      </if>
      <if test="record.typename != null" >
        typeName = #{record.typename,jdbcType=VARCHAR},
      </if>
      <if test="record.trainingschemeid != null" >
        trainingSchemeID = #{record.trainingschemeid,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update coursetypeinfo
    set courseTypeId = #{record.coursetypeid,jdbcType=INTEGER},
      typeNum = #{record.typenum,jdbcType=VARCHAR},
      upTypeNum = #{record.uptypenum,jdbcType=VARCHAR},
      typeName = #{record.typename,jdbcType=VARCHAR},
      trainingSchemeID = #{record.trainingschemeid,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.xm.jwxt.bean.trainScheme.Coursetypeinfo" >
    update coursetypeinfo
    <set >
      <if test="typenum != null" >
        typeNum = #{typenum,jdbcType=VARCHAR},
      </if>
      <if test="uptypenum != null" >
        upTypeNum = #{uptypenum,jdbcType=VARCHAR},
      </if>
      <if test="typename != null" >
        typeName = #{typename,jdbcType=VARCHAR},
      </if>
      <if test="trainingschemeid != null" >
        trainingSchemeID = #{trainingschemeid,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where courseTypeId = #{coursetypeid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.xm.jwxt.bean.trainScheme.Coursetypeinfo" >
    update coursetypeinfo
    set typeNum = #{typenum,jdbcType=VARCHAR},
      upTypeNum = #{uptypenum,jdbcType=VARCHAR},
      typeName = #{typename,jdbcType=VARCHAR},
      trainingSchemeID = #{trainingschemeid,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where courseTypeId = #{coursetypeid,jdbcType=INTEGER}
  </update>
</mapper>
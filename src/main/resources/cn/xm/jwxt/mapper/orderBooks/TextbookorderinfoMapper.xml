<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.xm.jwxt.mapper.orderBooks.TextbookorderinfoMapper" >
  <resultMap id="BaseResultMap" type="cn.xm.jwxt.bean.orderBooks.Textbookorderinfo" >
    <id column="orderid" property="orderid" jdbcType="INTEGER" />
    <result column="orderName" property="ordername" jdbcType="VARCHAR" />
    <result column="roomName" property="roomname" jdbcType="VARCHAR" />
    <result column="createPerson" property="createperson" jdbcType="VARCHAR" />
    <result column="createTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="yearNum" property="yearnum" jdbcType="VARCHAR" />
    <result column="semester" property="semester" jdbcType="VARCHAR" />
    <result column="isOrder" property="isorder" jdbcType="VARCHAR" />
    <result column="isCheck" property="ischeck" jdbcType="VARCHAR" />
    <result column="checkProposal" property="checkproposal" jdbcType="VARCHAR" />
    <result column="proposalNote" property="proposalnote" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    orderid, orderName, roomName, createPerson, createTime, yearNum, semester, isOrder, 
    isCheck, checkProposal, proposalNote, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.xm.jwxt.bean.orderBooks.TextbookorderinfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from textbookorderinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from textbookorderinfo
    where orderid = #{orderid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from textbookorderinfo
    where orderid = #{orderid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.xm.jwxt.bean.orderBooks.TextbookorderinfoExample" >
    delete from textbookorderinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.xm.jwxt.bean.orderBooks.Textbookorderinfo" >
    insert into textbookorderinfo (orderid, orderName, roomName, 
      createPerson, createTime, yearNum, 
      semester, isOrder, isCheck, 
      checkProposal, proposalNote, remark
      )
    values (#{orderid,jdbcType=INTEGER}, #{ordername,jdbcType=VARCHAR}, #{roomname,jdbcType=VARCHAR}, 
      #{createperson,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{yearnum,jdbcType=VARCHAR}, 
      #{semester,jdbcType=VARCHAR}, #{isorder,jdbcType=VARCHAR}, #{ischeck,jdbcType=VARCHAR}, 
      #{checkproposal,jdbcType=VARCHAR}, #{proposalnote,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.xm.jwxt.bean.orderBooks.Textbookorderinfo" >
    insert into textbookorderinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        orderid,
      </if>
      <if test="ordername != null" >
        orderName,
      </if>
      <if test="roomname != null" >
        roomName,
      </if>
      <if test="createperson != null" >
        createPerson,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
      <if test="yearnum != null" >
        yearNum,
      </if>
      <if test="semester != null" >
        semester,
      </if>
      <if test="isorder != null" >
        isOrder,
      </if>
      <if test="ischeck != null" >
        isCheck,
      </if>
      <if test="checkproposal != null" >
        checkProposal,
      </if>
      <if test="proposalnote != null" >
        proposalNote,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderid != null" >
        #{orderid,jdbcType=INTEGER},
      </if>
      <if test="ordername != null" >
        #{ordername,jdbcType=VARCHAR},
      </if>
      <if test="roomname != null" >
        #{roomname,jdbcType=VARCHAR},
      </if>
      <if test="createperson != null" >
        #{createperson,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="yearnum != null" >
        #{yearnum,jdbcType=VARCHAR},
      </if>
      <if test="semester != null" >
        #{semester,jdbcType=VARCHAR},
      </if>
      <if test="isorder != null" >
        #{isorder,jdbcType=VARCHAR},
      </if>
      <if test="ischeck != null" >
        #{ischeck,jdbcType=VARCHAR},
      </if>
      <if test="checkproposal != null" >
        #{checkproposal,jdbcType=VARCHAR},
      </if>
      <if test="proposalnote != null" >
        #{proposalnote,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.xm.jwxt.bean.orderBooks.TextbookorderinfoExample" resultType="java.lang.Integer" >
    select count(*) from textbookorderinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update textbookorderinfo
    <set >
      <if test="record.orderid != null" >
        orderid = #{record.orderid,jdbcType=INTEGER},
      </if>
      <if test="record.ordername != null" >
        orderName = #{record.ordername,jdbcType=VARCHAR},
      </if>
      <if test="record.roomname != null" >
        roomName = #{record.roomname,jdbcType=VARCHAR},
      </if>
      <if test="record.createperson != null" >
        createPerson = #{record.createperson,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.yearnum != null" >
        yearNum = #{record.yearnum,jdbcType=VARCHAR},
      </if>
      <if test="record.semester != null" >
        semester = #{record.semester,jdbcType=VARCHAR},
      </if>
      <if test="record.isorder != null" >
        isOrder = #{record.isorder,jdbcType=VARCHAR},
      </if>
      <if test="record.ischeck != null" >
        isCheck = #{record.ischeck,jdbcType=VARCHAR},
      </if>
      <if test="record.checkproposal != null" >
        checkProposal = #{record.checkproposal,jdbcType=VARCHAR},
      </if>
      <if test="record.proposalnote != null" >
        proposalNote = #{record.proposalnote,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update textbookorderinfo
    set orderid = #{record.orderid,jdbcType=INTEGER},
      orderName = #{record.ordername,jdbcType=VARCHAR},
      roomName = #{record.roomname,jdbcType=VARCHAR},
      createPerson = #{record.createperson,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      yearNum = #{record.yearnum,jdbcType=VARCHAR},
      semester = #{record.semester,jdbcType=VARCHAR},
      isOrder = #{record.isorder,jdbcType=VARCHAR},
      isCheck = #{record.ischeck,jdbcType=VARCHAR},
      checkProposal = #{record.checkproposal,jdbcType=VARCHAR},
      proposalNote = #{record.proposalnote,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.xm.jwxt.bean.orderBooks.Textbookorderinfo" >
    update textbookorderinfo
    <set >
      <if test="ordername != null" >
        orderName = #{ordername,jdbcType=VARCHAR},
      </if>
      <if test="roomname != null" >
        roomName = #{roomname,jdbcType=VARCHAR},
      </if>
      <if test="createperson != null" >
        createPerson = #{createperson,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="yearnum != null" >
        yearNum = #{yearnum,jdbcType=VARCHAR},
      </if>
      <if test="semester != null" >
        semester = #{semester,jdbcType=VARCHAR},
      </if>
      <if test="isorder != null" >
        isOrder = #{isorder,jdbcType=VARCHAR},
      </if>
      <if test="ischeck != null" >
        isCheck = #{ischeck,jdbcType=VARCHAR},
      </if>
      <if test="checkproposal != null" >
        checkProposal = #{checkproposal,jdbcType=VARCHAR},
      </if>
      <if test="proposalnote != null" >
        proposalNote = #{proposalnote,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where orderid = #{orderid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.xm.jwxt.bean.orderBooks.Textbookorderinfo" >
    update textbookorderinfo
    set orderName = #{ordername,jdbcType=VARCHAR},
      roomName = #{roomname,jdbcType=VARCHAR},
      createPerson = #{createperson,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      yearNum = #{yearnum,jdbcType=VARCHAR},
      semester = #{semester,jdbcType=VARCHAR},
      isOrder = #{isorder,jdbcType=VARCHAR},
      isCheck = #{ischeck,jdbcType=VARCHAR},
      checkProposal = #{checkproposal,jdbcType=VARCHAR},
      proposalNote = #{proposalnote,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where orderid = #{orderid,jdbcType=INTEGER}
  </update>
</mapper>